/**
 * Generated by orval v7.7.0 🍺
 * Do not edit manually.
 * Indicador Online API
 * Documentação da API usando Swagger
 * OpenAPI spec version: 1.0
 */
export interface LoginDto {
  /** Endereço de e-mail do usuário */
  email: string;
  /**
   * Senha do usuário (mínimo 4 caracteres)
   * @minLength 4
   */
  password: string;
}

export interface ResponseAuthDto {
  /** Token de acesso */
  accessToken: string;
}

export interface UnauthorizedException { [key: string]: unknown }

export interface NotFoundException { [key: string]: unknown }

export interface User {
  /** Nome do usuário */
  id: string;
  /** Email do usuário */
  email: string;
  /** Senha do usuário */
  password: string;
  /** Nome do usuário (opcional) */
  name: string;
  /** Papel do usuário (opcional) */
  role: string;
  /** Data de criação do usuário (opcional) */
  created_at: string;
  /** Data de atualização do usuário (opcional) */
  updated_at: string;
}

export interface ConflictException { [key: string]: unknown }

export interface Company {
  /** ID único da empresa */
  id: number;
  /** Nome da empresa */
  name: string;
  /** CNPJ da empresa */
  cnpj: string;
  /** Se a empresa está ativa ou não */
  isActive: boolean;
  /** IDs dos checklists associados à empresa */
  checklistIds: number[];
  /** Data de criação da empresa */
  created_at?: string;
  /** Última atualização da empresa */
  updated_at?: string;
}

export interface CreateCompanyDto {
  /** Nome da empresa */
  name: string;
  /** CNPJ da empresa */
  cnpj: string;
  /** Se a empresa está ativa ou não */
  isActive: boolean;
  /** IDs dos checklists associados à empresa */
  checklistIds: number[];
}

export interface UpdateCompanyDto {
  /** Nome da empresa */
  name: string;
  /** CNPJ da empresa */
  cnpj: string;
  /** Se a empresa está ativa ou não */
  isActive: boolean;
  /** IDs dos checklists associados à empresa */
  checklistIds: number[];
}

export interface CreateEmployeeDto {
  /** Nome do funcionário */
  name: string;
  /** Email do funcionário */
  email: string;
  /** Telefone do funcionário */
  phone: string;
  /** ID da empresa do funcionário */
  company_id: number;
}

export interface CreateEmployeeResponse {
  /** Id do funcionário */
  id: number;
  /** Nome do funcionário */
  name: string;
  /** Email do funcionário */
  email: string;
  /** ID da empresa do funcionário */
  company_id: number;
  /** Telefone do funcionário */
  phone: string;
}

/**
 * Tipo da pergunta
 */
export type QuestionDtoQuestionType = typeof QuestionDtoQuestionType[keyof typeof QuestionDtoQuestionType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const QuestionDtoQuestionType = {
  Upload_de_arquivo: 'Upload de arquivo',
  Múltipla_escolha: 'Múltipla escolha',
  Texto: 'Texto',
} as const;

export interface QuestionDto {
  /** Texto da pergunta */
  questionText: string;
  /** Tipo da pergunta */
  questionType: QuestionDtoQuestionType;
  /** Opções da pergunta */
  options: string[];
  /** Indica se a pergunta é obrigatória */
  isRequired: boolean;
  /** Posição da pergunta */
  position: number;
}

export interface CategoryDto {
  /** Nome da categoria */
  categoryName: string;
  /** Lista de perguntas dentro da categoria */
  questions: QuestionDto[];
}

export interface CreateChecklistDto {
  /** Nome do checklist */
  name: string;
  /** Lista de categorias do checklist */
  categories: CategoryDto[];
}

/**
 * Tipo da pergunta
 */
export type QuestionQuestionType = typeof QuestionQuestionType[keyof typeof QuestionQuestionType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const QuestionQuestionType = {
  'multiple-choice': 'multiple-choice',
  text: 'text',
  boolean: 'boolean',
} as const;

export interface Question {
  /** Texto da pergunta */
  questionText: string;
  /** Tipo da pergunta */
  questionType: QuestionQuestionType;
  /** Opções disponíveis para a pergunta */
  options?: string[];
  /** Define se a pergunta é obrigatória */
  isRequired: boolean;
  /** Posição da pergunta na categoria */
  position: number;
}

export interface Category {
  /** Nome da categoria */
  categoryName: string;
  /** Lista de perguntas dentro da categoria */
  questions: Question[];
}

export interface Checklist {
  /** ID único do checklist */
  id: number;
  /** Nome do checklist */
  name: string;
  /** Lista de categorias dentro do checklist */
  categories: Category[];
  /** Data de criação */
  created_at?: string;
  /** Última atualização */
  updated_at?: string;
}

export interface UpdateChecklistDto {
  /** Nome do checklist */
  name: string;
  /** Lista de categorias do checklist */
  categories: CategoryDto[];
}

